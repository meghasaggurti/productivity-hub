// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() {
      return request.auth != null;
    }

    // Check if the requester is a member of a workspace
    function isWorkspaceMember(ws) {
      return signedIn() && (request.auth.uid in ws.data.members);
    }

    // Check roles
    function isOwner(ws) {
      return isWorkspaceMember(ws) && ws.data.members[request.auth.uid] == 'owner';
    }
    function isEditor(ws) {
      return isWorkspaceMember(ws) && (
        ws.data.members[request.auth.uid] == 'owner' ||
        ws.data.members[request.auth.uid] == 'editor'
      );
    }
    function canRead(ws) {
      return isWorkspaceMember(ws);
    }

    match /workspaces/{wsId} {
      allow create: if signedIn();
      allow read: if isWorkspaceMember(resource);
      // Only owner can update/delete the workspace doc itself
      allow update, delete: if isOwner(resource);

      // Pages
      match /pages/{pageId} {
        allow read: if canRead(get(/databases/$(database)/documents/workspaces/$(wsId)));
        allow create: if isEditor(get(/databases/$(database)/documents/workspaces/$(wsId)));
        allow update, delete: if isEditor(get(/databases/$(database)/documents/workspaces/$(wsId)));

        // Blocks
        match /blocks/{blockId} {
          allow read: if canRead(get(/databases/$(database)/documents/workspaces/$(wsId)));
          allow create, update, delete: if isEditor(get(/databases/$(database)/documents/workspaces/$(wsId)));
        }
      }
    }
  }
}

